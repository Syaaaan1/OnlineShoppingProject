@*@model DbOptions.Models.user_entity

@{
    ViewData["Title"] = "Login";
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="login-container">
        <h2 class="text-center mt-4">Login</h2>
        <form asp-action="Login" method="post" class="shadow p-4 rounded">
            <div class="form-group">
                <label for="Username">Username</label>
                <input type="text" class="form-control" id="Username" name="Username" required>
            </div>
            <div class="form-group">
                <label for="Password">Password</label>
                <input type="password" class="form-control" id="Password" name="Password" required>
            </div>
            <button type="submit" class="btn btn-primary btn-block mt-3">Login</button>
        </form>
    </div>
</div>

<style>
    body {
        background-color: #f8f9fa;
    }

    .form-control {
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        .form-control:focus {
            border-color: #80bdff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        transition: background-color 0.3s, transform 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
            transform: translateY(-3px);
        }

    .vh-100 {
        height: 100vh;
    }

    .login-container {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 300px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }
</style>*@
